@page
@using System.Security.Claims
@model Application.Pages.Schedules.AddModel
@{
    ViewData["Title"] = "Add Schedule";
    Layout = "_LayoutAlternative";
}
<div class="container py-5">
    <div class="card shadow-lg border-0 mx-auto" style="max-width: 700px; border-radius: 25px; background: #ffffff; overflow: hidden;">
        <div class="card-header bg-primary text-white text-center py-4" style="background: linear-gradient(135deg, #1e88e5, #42a5f5);">
            <h2 class="mb-0" style="font-weight: 700; letter-spacing: 1px; font-size: 1.75rem;">Schedule Date</h2>
        </div>
        <div class="card-body p-5">
            <form method="post" class="needs-validation" novalidate>
                <div class="mb-4">
                    <label for="scheduleDate" class="form-label fw-semibold" style="color: #263238; font-size: 1.2rem;">Select Date</label>
                    <input type="date" id="scheduleDate" asp-for="SelectedDate" class="form-control form-control-lg shadow-sm" required
                           style="border-radius: 12px; border: 1px solid #cfd8dc; padding: 14px; font-size: 1.05rem; transition: all 0.3s ease;" />
                    <div class="invalid-feedback">Please select a date.</div>
                </div>

                <div class="mb-5">
                    <label class="form-label fw-semibold" style="color: #263238; font-size: 1.2rem;">Available Time Slots</label>
                    <div class="slots-list p-4 bg-light rounded shadow-sm" id="slotsContainer" style="max-height: 300px; overflow-y: auto; border: 1px solid #eceff1; transition: all 0.3s ease;">
                        @if (Model.Slots == null || !Model.Slots.Any())
                        {
                            <p class="text-muted m-0" style="font-style: italic; font-size: 1rem;">Select a date to see available slots.</p>
                        }
                        else
                        {
                            @foreach (var slot in Model.Slots)
                            {
                                <div class="form-check mb-4 slot-item animate__animated animate__fadeIn">
                                    <input class="form-check-input slot-checkbox" type="checkbox" name="SelectedSlots" value="@slot.SlotId" id="slot-@slot.SlotId"
                                           style="transform: scale(2); margin-right: 18px; cursor: pointer;" aria-label="Select slot from @slot.StartTime.ToString("hh:mm tt") to @slot.EndTime.ToString("hh:mm tt")">
                                    <label class="form-check-label" for="slot-@slot.SlotId" style="font-size: 1.2rem; color: #283593;">
                                        @slot.StartTime.ToString("hh:mm tt") - @slot.EndTime.ToString("hh:mm tt")
                                    </label>
                                </div>
                            }
                        }
                    </div>
                </div>

                <button type="submit" class="btn btn-primary btn-lg w-100 fw-semibold"
                        style="background: #1e88e5; border: none; border-radius: 12px; padding: 15px; font-size: 1.15rem; transition: all 0.3s ease;">
                    Confirm
                </button>
            </form>

            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div id="messageBox" class="mt-4 animate__animated animate__fadeIn">
                    <div class="alert @(Model.Message.Contains("success", StringComparison.OrdinalIgnoreCase) ? "alert-success" : "alert-danger")"
                         style="border-radius: 12px; padding: 15px; font-size: 1.05rem; box-shadow: 0 4px 12px rgba(0,0,0,0.08);">
                        @Model.Message
                    </div>
                </div>
                <script>
                    setTimeout(() => {
                        const messageBox = document.getElementById('messageBox');
                        if (messageBox) {
                            messageBox.classList.remove('animate__fadeIn');
                            messageBox.classList.add('animate__fadeOut');
                            setTimeout(() => messageBox.remove(), 500);
                        }
                    }, 3000); // 3 seconds
                </script>
            }
        </div>
    </div>
</div>

<script>
    document.getElementById('scheduleDate').addEventListener('change', function () {
        const selectedDate = this.value;
        if (!selectedDate) return;

        fetch(`/Schedules/Add?handler=Slots&selectedDate=${selectedDate}`, {
            method: 'GET',
            headers: { 'Accept': 'application/json' }
        })
        .then(response => response.json())
        .then(data => {
            const slotsContainer = document.getElementById('slotsContainer');
            slotsContainer.innerHTML = '';

            if (!data.success || !data.slots || data.slots.length === 0) {
                slotsContainer.innerHTML = '<p class="text-muted m-0" style="font-style: italic; font-size: 1rem;">No slots available for this date.</p>';
                return;
            }

            data.slots.forEach(slot => {
                const div = document.createElement('div');
                div.className = 'form-check mb-3 slot-item';
                div.innerHTML = `
                    <input class="form-check-input" type="checkbox" name="SelectedSlots" value="${slot.slotId}" id="slot-${slot.slotId}" style="transform: scale(1.6); margin-right: 15px; cursor: pointer;" aria-label="Select slot from ${slot.startTime} to ${slot.endTime}">
                    <label class="form-check-label" for="slot-${slot.slotId}" style="font-size: 1.1rem; color: #37474f;">
                        ${slot.startTime} - ${slot.endTime}
                    </label>
                `;
                slotsContainer.appendChild(div);
            });
        })
        .catch(error => {
            console.error('Error fetching slots:', error);
            document.getElementById('slotsContainer').innerHTML = '<p class="text-danger m-0" style="font-style: italic; font-size: 1rem;">Error loading slots. Please try again.</p>';
        });
    });

    // Bootstrap form validation
    (function () {
        'use strict';
        const forms = document.querySelectorAll('.needs-validation');
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    })();
</script>

<style>
    body {
        background-color: #f4f7fa;
        font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
        line-height: 1.6;
    }

    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1) !important;
        }

    .btn-primary {
        background: linear-gradient(135deg, #1e88e5, #42a5f5);
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #1565c0, #1e88e5);
            transform: translateY(-2px);
        }

    .form-check-input:checked {
        background-color: #1e88e5;
        border-color: #1e88e5;
    }

    .slots-list {
        background: #fafafa;
    }

        .slots-list::-webkit-scrollbar {
            width: 12px;
        }

        .slots-list::-webkit-scrollbar-thumb {
            background: #90a4ae;
            border-radius: 6px;
        }

        .slots-list::-webkit-scrollbar-track {
            background: #eceff1;
        }

    .form-control:focus {
        border-color: #42a5f5;
        box-shadow: 0 0 0 0.25rem rgba(30, 136, 229, 0.2);
    }

    .slot-item {
        transition: background-color 0.2s ease;
    }

        .slot-item:hover {
            background-color: #f1f3f5;
            border-radius: 8px;
        }
    /* Accessibility */
    .form-check-input:focus {
        box-shadow: 0 0 0 0.25rem rgba(30, 136, 229, 0.25);
    }
</style>

<!-- Include Animate.css for message animations -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" integrity="sha512-c42qTSw/wPZ3/5LBzD+Bw5f7KWXD+WI+cO3pTR3cR0Xz+mlOBbHU5xVvFXL0vZSC2F+1tVHGST2nMZb+r8haYcQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />