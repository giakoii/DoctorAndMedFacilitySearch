@page
@using System.Security.Claims
@model Application.Pages.Schedules.AddModel
@{
    ViewData["Title"] = "Add Schedule";
    Layout = "_LayoutAlternative";
}
<div class="container">
    <h2>Add Schedule</h2>

    <form method="post">
        <div class="form-group">
            <label for="scheduleDate" class="form-label">Select Date</label>
            <input type="date" id="scheduleDate" asp-for="SelectedDate" class="form-control" required />
        </div>

        <div class="form-group">
            <label class="form-label">Select Slots</label>
            <div class="slots-list">
                @if (Model.Slots == null || !Model.Slots.Any())
                {
                    <p class="text-muted">No slots available.</p>
                }
                else
                {
                    @foreach (var slot in Model.Slots)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="SelectedSlots" value="@slot.SlotId" id="slot-@slot.SlotId">
                            <label class="form-check-label" for="slot-@slot.SlotId">
                                @slot.StartTime.ToString("hh:mm tt") - @slot.EndTime.ToString("hh:mm tt")
                            </label>
                        </div>
                    }
                }
            </div>
        </div>

        <button type="submit" class="btn btn-custom">Add Schedule</button>
    </form>

    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="message-box @(Model.Message.Contains("success", StringComparison.OrdinalIgnoreCase) ? "alert alert-success" : "alert alert-danger")">
            @Model.Message
        </div>
    }
</div>