@page
@model Application.Pages.Appointment.ChangeModel
@{
    ViewData["Title"] = "Change Appointment";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Arial', sans-serif;
        }

        .container {
            max-width: 900px;
            margin-top: 40px;
        }

        .card {
            border-radius: 12px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            background-color: #0d6efd;
            color: white;
            font-weight: bold;
            text-align: center;
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
        }

        .btn-primary {
            background-color: #0d6efd;
            border: none;
        }

            .btn-primary:hover {
                background-color: #0b5ed7;
            }
    </style>
</head>
<body>
    <div class="container">
        @if (TempData["AppointmentMessage"] != null)
        {
            <div class="alert alert-info">
                @TempData["AppointmentMessage"]
            </div>
        }
        @if (Model.Appointment != null)
        {
            <h2>Change Appointment</h2>

            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5>Modify Appointment</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <!-- Left Section: Appointment Details -->
                        <div class="col-md-6">
                            <h5>Appointment Details</h5>
                            <dl class="row">
                                <dt class="col-sm-4">Appointment ID:</dt>
                                <dd class="col-sm-8">@Model.Appointment.AppointmentId</dd>

                                <dt class="col-sm-4">Date:</dt>
                                <dd class="col-sm-8">@Model.Appointment.AppointmentDate</dd>

                                <dt class="col-sm-4">Status:</dt>
                                <dd class="col-sm-8">@Model.Appointment.Status</dd>

                                <dt class="col-sm-4">Payment Status:</dt>
                                <dd class="col-sm-8">@Model.Appointment.PaymentStatus</dd>

                                <dt class="col-sm-4">Patient Name:</dt>
                                <dd class="col-sm-8">@Model.Appointment.PatientName</dd>

                                <dt class="col-sm-4">Doctor Name:</dt>
                                <dd class="col-sm-8">@Model.Appointment.DoctorName</dd>
                            </dl>
                        </div>

                        <!-- Right Section: Change Doctor & Available Slots -->
                        <div class="col-md-6">
                            <h5>Select Doctor</h5>
                            <select id="doctorSelect" class="form-select" onchange="fetchAvailableSlots()">
                                <option value="">-- Select a Doctor --</option>
                                @foreach (var doctor in Model.AvailableDoctors)
                                {
                                    <option value="@doctor.Value">@doctor.Text</option>
                                }
                            </select>

                            <h5 class="mt-4">Available Slots</h5>
                            <form method="post">
                                <ul id="availableSlots" class="list-group mt-2">
                                    <li class="list-group-item text-muted">Select a doctor to view available slots.</li>
                                </ul>
                                <input type="hidden" asp-for="SelectedScheduleId" id="selectedScheduleId" />
                                <input type="hidden" asp-for="SelectedSlotId" id="selectedSlotId" />
                                <input type="hidden" asp-for="SelectedDoctorId" id="selectedDoctorId" />
                                <input type="hidden" asp-for="SelectedAppointmentId" id="selectedAppointmentId" />
                                <button type="submit" class="btn btn-primary mt-3">Confirm Appointment</button>
                            </form>
                        </div>
                    </div>

                    <div class="mt-3">
                        <a asp-page="./Index" class="btn btn-secondary">Back to List</a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <p class="text-danger text-center">Appointment not found.</p>
        }
    </div>

    <script>
            function fetchAvailableSlots() {
            var doctorId = document.getElementById("doctorSelect").value;
            var slotsContainer = document.getElementById("availableSlots");
            document.getElementById("selectedDoctorId").value = doctorId;
            if (doctorId) {
                fetch(`/Appointment/Change?handler=DoctorSchedules&doctorId=${doctorId}`)
                    .then(response => response.json())
                    .then(data => {
                        slotsContainer.innerHTML = "";
                        if (data.length > 0) {
                            data.forEach(slot => {
                                var li = document.createElement("li");
                                li.className = "list-group-item";
                                li.innerHTML = `
                                    <input type="radio" name="selectedSlot" value="${slot.slotId}"
                                           data-schedule-id="${slot.scheduleId}"
                                           onclick="updateSelectedSlot(${slot.slotId}, ${slot.scheduleId})">
                                    Time: ${slot.slotTime}, Date: ${slot.scheduleDate}
                                `;
                                slotsContainer.appendChild(li);
                            });
                        } else {
                            slotsContainer.innerHTML = "<li class='list-group-item text-danger'>No available slots.</li>";
                        }
                    })
                    .catch(error => {
                        console.error("Error fetching slots:", error);
                        slotsContainer.innerHTML = "<li class='list-group-item text-danger'>Failed to fetch slots.</li>";
                    });
            } else {
                slotsContainer.innerHTML = "<li class='list-group-item text-muted'>Select a doctor to view available slots.</li>";
            }
        }

        function updateSelectedSlot(slotId, scheduleId) {
            document.getElementById("selectedSlotId").value = slotId;
            document.getElementById("selectedScheduleId").value = scheduleId;

        }
    </script>
</body>
</html>
