@page "{facilityData?}/{currentMonth:int?}/{currentYear:int?}/{selectedDate?}"
@using System.Security.Claims;
@model Application.Pages.Appointment.ConfirmationModel
@{
    ViewData["Title"] = "Confirm Appointment";
    Layout = null;

    var daysOfWeek = new[] { "T2", "T3", "T4", "T5", "T6", "T7", "CN" };
    int daysInMonth;
    int firstDayOffset;
    try
    {
        daysInMonth = DateTime.DaysInMonth(Model.CurrentYear, Model.CurrentMonth);
        var firstDayOfMonth = new DateTime(Model.CurrentYear, Model.CurrentMonth, 1).DayOfWeek;
        firstDayOffset = (int)firstDayOfMonth - 1;
        if (firstDayOffset < 0) firstDayOffset = 6;
    }
    catch (ArgumentOutOfRangeException)
    {
        daysInMonth = 0;
        firstDayOffset = 0;
    }
    var email = User.FindFirst(ClaimTypes.Email)?.Value;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            background-color: #f5f7fa;
            margin: 0;
            padding: 20px;
        }

        .confirmation-container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            padding: 30px;
        }

        h2 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
            font-size: 28px;
        }

        h3 {
            color: #34495e;
            border-bottom: 2px solid #3498db;
            padding-bottom: 10px;
            margin-top: 30px;
            font-size: 22px;
        }

        .info-section {
            background: #f9fbfc;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

            .info-section p {
                margin: 10px 0;
                color: #555;
                font-size: 16px;
            }

                .info-section p strong {
                    color: #2c3e50;
                    min-width: 120px;
                    display: inline-block;
                }

        .calendar-container {
            margin: 20px 0;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #3498db;
            color: white;
            padding: 15px;
            border-radius: 8px 8px 0 0;
        }

            .calendar-header h4 {
                margin: 0;
                font-size: 20px;
            }

            .calendar-header button {
                background: white;
                color: #3498db;
                border: none;
                padding: 8px 15px;
                border-radius: 5px;
                cursor: pointer;
                font-weight: bold;
                transition: background 0.3s;
            }

                .calendar-header button:hover {
                    background: #ecf0f1;
                }

        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
            padding: 15px;
            background: #fff;
            border: 1px solid #ddd;
            border-top: none;
            border-radius: 0 0 8px 8px;
        }

        .day-header {
            text-align: center;
            font-weight: bold;
            color: #7f8c8d;
            padding: 10px;
            background: #ecf0f1;
        }

        .calendar-grid a.day, .calendar-grid .day {
            text-align: center;
            padding: 15px;
            border-radius: 50%;
            font-size: 16px;
            transition: all 0.3s;
        }

        .calendar-grid a.day {
            text-decoration: none;
            color: #2c3e50;
            display: block;
            cursor: pointer;
        }

            .calendar-grid a.day.available {
                background: #e8f4f8;
            }

                .calendar-grid a.day.available:hover {
                    background: #3498db;
                    color: white;
                    transform: scale(1.1);
                }

        .calendar-grid .day.selected {
            background: #3498db;
            color: white;
            font-weight: bold;
        }

        .calendar-grid .day.unavailable {
            color: #bdc3c7;
            background: #f5f5f5;
        }

        .time-slots {
            background: #f9fbfc;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
        }

            .time-slots h4 {
                color: #2c3e50;
                margin: 0 0 15px 0;
                font-size: 18px;
            }

            .time-slots label {
                display: block;
                margin: 10px 0;
                padding: 10px;
                background: white;
                border-radius: 5px;
                cursor: pointer;
                transition: background 0.3s;
            }

                .time-slots label:hover {
                    background: #ecf0f1;
                }

            .time-slots input[type="radio"] {
                margin-right: 10px;
            }

        .confirm-btn {
            background: #2ecc71;
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            display: block;
            margin: 20px auto 0;
            transition: background 0.3s;
        }

            .confirm-btn:hover {
                background: #27ae60;
            }

        .error-message {
            text-align: center;
            color: #e74c3c;
            padding: 20px;
            background: #fceae9;
            border-radius: 8px;
            margin: 20px 0;
        }

        .model-errors {
            color: #e74c3c;
            margin: 10px 0;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <div class="confirmation-container">
        <h2>Confirm Your Appointment</h2>

        @if (Model.Facility != null && Model.DoctorSchedule != null)
        {
            <div class="info-section">
                <h3>Selected Facility</h3>
                <p><strong>Facility ID:</strong> @Model.Facility.FacilityId</p>
                <p><strong>Name:</strong> @Model.Facility.Name</p>
                <p><strong>Address:</strong> @Model.Facility.Address</p>
            </div>

            <div class="info-section">
                <h3>Assigned Doctor</h3>
                <p><strong>Doctor ID:</strong> @Model.DoctorSchedule.DoctorId</p>
                <p><strong>Name:</strong> @Model.DoctorSchedule.DoctorName</p>
            </div>

            <h3>Select Date and Time</h3>
            <form method="post" id="calendarForm">
                <input type="hidden" name="facilityData" value="@Model.FacilityData" />
                <div class="calendar-container">
                    <div class="calendar-header">
                        <h4>Month @Model.CurrentMonth Year @Model.CurrentYear</h4>
                        <div>
                            <button type="submit" asp-page-handler="PreviousMonth"
                                    asp-route-facilityData="@Model.FacilityData">
                                Previous
                            </button>
                            <button type="submit" asp-page-handler="NextMonth"
                                    asp-route-facilityData="@Model.FacilityData">
                                Next
                            </button>
                        </div>
                    </div>
                    <div class="calendar-grid">
                        @for (int i = 0; i < daysOfWeek.Length; i++)
                        {
                            <div class="day-header">@daysOfWeek[i]</div>
                        }
                        @for (int i = 0; i < firstDayOffset; i++)
                        {
                            <div></div>
                        }
                        @for (int day = 1; day <= daysInMonth; day++)
                        {
                            var currentDateStr = new DateOnly(Model.CurrentYear, Model.CurrentMonth, day).ToString("yyyy-MM-dd");
                            var hasSlots = Model.AvailableSchedules.ContainsKey(currentDateStr) && Model.AvailableSchedules[currentDateStr].Any();
                            var isSelected = Model.SelectedDate == currentDateStr;
                            if (hasSlots)
                            {
                                <a href="?facilityData=@Uri.EscapeDataString(Model.FacilityData)¤tMonth=@Model.CurrentMonth¤tYear=@Model.CurrentYear&selectedDate=@currentDateStr"
                                   class="day @(isSelected ? "selected" : "") available">
                                    @day
                                </a>
                            }
                            else
                            {
                                <div class="day unavailable">
                                    @day
                                </div>
                            }
                        }
                    </div>
                </div>
            </form>

            @if (!string.IsNullOrEmpty(Model.SelectedDate) && Model.AvailableSchedules.ContainsKey(Model.SelectedDate))
            {
                <form method="get" asp-page="/Appointment/Process">
                    <input type="hidden" name="FacilityId" value="@Model.Facility.FacilityId" />
                    <input type="hidden" name="SelectedDate" value="@Model.SelectedDate" />
                    <input type="hidden" name="DoctorId" value="@Model.DoctorSchedule.DoctorId" />
                    @{
                        if (email != null)
                        {
                            <input type="hidden" name="Email" value="@email" />
                        }
                    }

                    <div class="time-slots">
                        <h4>@DateOnly.ParseExact(Model.SelectedDate, "yyyy-MM-dd").ToString("dddd, dd/MM/yyyy")</h4>
                        <p>Available Slots: @Model.AvailableSlots.Count</p>
                        @foreach (var slot in Model.AvailableSlots)
                        {
                            <label>
                                <input type="radio" name="SelectedTime" value="@slot.StartTime" required
                                @(Model.SelectedTime == slot.StartTime ? "checked" : "") />
                                @slot.StartTime - @slot.EndTime
                            </label>
                        }
                    </div>
                    <button type="submit" class="confirm-btn">Confirm Appointment</button>
                </form>
            }
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="text-danger">
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }
        }
        else
        {
            <div class="error-message">
                <p>Error: No appointment data available. Please go back and select a facility and doctor.</p>
                <a href="Booking">Go Back</a>
            </div>
        }
    </div>
</body>
</html>