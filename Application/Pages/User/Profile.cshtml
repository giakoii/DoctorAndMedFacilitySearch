@page
@using System.Security.Claims
@using BusinessLogic
@model Application.Pages.User.Profile

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - Profile</title>
    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600&family=Playfair+Display:wght@400;500;600&display=swap"
        rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"/>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="lib/animate/animate.min.css" rel="stylesheet">
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">


    <!-- Customized Bootstrap Stylesheet -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <script src="js/search.js"></script>

    <!-- Template Stylesheet -->
    <link href="css/style.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/bootstrap.min.css"/>
    <style>
        body {
            background: rgb(21, 185, 217)
        }

        .form-control:focus {
            box-shadow: none;
            border-color: #35ccea
        }

        .profile-button {
            background: rgb(21, 185, 217);
            box-shadow: none;
            border: none
        }

        .profile-button:hover {
            background: #15B9D9FF
        }

        .profile-button:focus {
            background: #15B9D9FF;
            box-shadow: none
        }

        .profile-button:active {
            background: #15B9D9FF;
            box-shadow: none
        }

        .back:hover {
            color: #15B9D9FF;
            cursor: pointer
        }

        .labels {
            font-size: 11px
        }

        .add-experience:hover {
            background: #6fe6ff;
            color: #fff;
            cursor: pointer;
            border: solid 1px #71d0e3
        }
    </style>
</head>
<body>
<div class="container rounded bg-white mt-5 mb-5">
    <div class="row">
        <div class="col-md-3 border-right">
            <div class="d-flex flex-column align-items-center text-center p-3 py-5">
                <img class="rounded-circle mt-5" width="150px"
                     src="https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg">
                <span class="font-weight-bold">@User.Identity.Name</span>
                <span class="text-black-50">@User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)?.Value</span>
            </div>
        </div>
        <div class="col-md-5 border-right">
            <div class="p-3 py-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h4 class="text-right">Profile Settings</h4>
                </div>
                <div class="row mt-2">
                    <div class="col-md-12"><label class="labels">Full Name</label><input type="text"
                                                                                         class="form-control"
                                                                                         value="@User.Identity.Name"
                                                                                         readonly></div>
                    <div class="col-md-12"><label class="labels">Role</label><input type="text" class="form-control"
                                                                                    value="@User.Claims.FirstOrDefault(c => c.Type == "RoleName")?.Value"
                                                                                    readonly></div>
                </div>

                @if (User.Claims.FirstOrDefault(c => c.Type == "RoleName")?.Value == ConstantEnum.Role.Patient.ToString())
                {
                    <div class="row mt-3">
                        <input type="hidden" name="PatientId" value="@Model.PatientProfileViewModel?.PatientId"/>
                        <div class="col-md-12">
                            <label class="labels">Gender</label>
                            <input type="text" class="form-control"
                                   value="@(Model.PatientProfileViewModel?.Gender == 1 ? "Male" : (Model.PatientProfileViewModel?.Gender == 2 ? "Female" : "Other"))"
                                   readonly></div>
                        <div class="col-md-12">
                            <label class="labels">Date Of Birth</label>
                            <input type="text" class="form-control" value="@Model.PatientProfileViewModel?.DateOfBirth"
                                   readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Address</label>
                            <input type="text" class="form-control" value="@Model.PatientProfileViewModel?.Address"
                                   readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Medical History</label>
                            <input type="text" class="form-control"
                                   value="@Model.PatientProfileViewModel?.MedicalHistory" readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Allergies</label>
                            <input type="text" class="form-control" value="@Model.PatientProfileViewModel?.Allergies"
                                   readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">BloodType</label>
                            <input type="text" class="form-control" value="@Model.PatientProfileViewModel?.BloodType"
                                   readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">EmergencyContact</label>
                            <input type="text" class="form-control"
                                   value="@Model.PatientProfileViewModel?.EmergencyContact" readonly>
                        </div>
                    </div>
                }

                else if (User.Claims.FirstOrDefault(c => c.Type == "RoleName")?.Value == ConstantEnum.Role.MedicalExpert.ToString())
                {
                    <div class="row mt-3">
                        <input type="hidden" class="form-control" value="@Model.DoctorProfileViewModel?.DoctorId"/>
                        <div class="col-md-12">
                            <label class="labels">Specialization</label>
                            <input type="text" class="form-control" value="@Model.DoctorProfileViewModel?.Specialty"
                                   readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Experience</label>
                            <input type="text" class="form-control"
                                   value="@Model.DoctorProfileViewModel?.ExperienceYears" readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Consultation Fee</label>
                            <input type="text" class="form-control"
                                   value="@Model.DoctorProfileViewModel?.ConsultationFee" readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Availability</label>
                            <input type="text" class="form-control" value="@Model.DoctorProfileViewModel?.Availability"
                                   readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Qualification</label>
                            <input type="text" class="form-control" value="@Model.DoctorProfileViewModel?.Qualification"
                                   readonly>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">WorkSchedule</label>
                            <input type="text" class="form-control" value="@Model.DoctorProfileViewModel?.WorkSchedule"
                                   readonly>
                        </div>
                    </div>
                }
                <div class="mt-5 text-center">
                    <button type="button" class="btn btn-primary profile-button" data-bs-toggle="modal"
                            data-bs-target="#editProfileModal">
                        Edit Profile
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Editing Profile -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="EditProfile">
                    @if (User.Claims.FirstOrDefault(c => c.Type == "RoleName")?.Value == ConstantEnum.Role.MedicalExpert.ToString())
                    {
                        <input type="hidden" asp-for="@Model.DoctorProfileViewModel!.DoctorId"
                               value="@Model.DoctorProfileViewModel?.DoctorId"/>

                        <div class="col-md-12">
                            <label class="labels">Specialization</label>
                            <input type="text" asp-for="@Model.DoctorProfileViewModel!.Specialty" class="form-control"
                                   value="@Model.DoctorProfileViewModel?.Specialty">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Experience</label>
                            <input type="text" asp-for="@Model.DoctorProfileViewModel!.ExperienceYears"
                                   class="form-control" value="@Model.DoctorProfileViewModel?.ExperienceYears">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Consultation Fee</label>
                            <input type="text" asp-for="@Model.DoctorProfileViewModel!.ConsultationFee"
                                   class="form-control" value="@Model.DoctorProfileViewModel?.ConsultationFee">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Availability</label>
                            <input type="text" asp-for="@Model.DoctorProfileViewModel!.Availability"
                                   class="form-control" value="@Model.DoctorProfileViewModel?.Availability">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Qualification</label>
                            <input type="text" asp-for="@Model.DoctorProfileViewModel!.Qualification"
                                   class="form-control" value="@Model.DoctorProfileViewModel?.Qualification">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">WorkSchedule</label>
                            <input type="text" asp-for="@Model.DoctorProfileViewModel!.WorkSchedule"
                                   class="form-control" value="@Model.DoctorProfileViewModel?.WorkSchedule">
                        </div>
                    }
                    else if (User.Claims.FirstOrDefault(c => c.Type == "RoleName")?.Value == ConstantEnum.Role.Patient.ToString())
                    {
                        <input type="hidden" asp-for="@Model.PatientProfileViewModel!.PatientId"
                               value="@Model.PatientProfileViewModel?.PatientId"/>

                        <div class="col-md-12">
                            <label class="labels">Gender</label>
                            <select class="form-control" asp-for="PatientProfileViewModel.Gender">
                                <option value="1" selected="@(Model.PatientProfileViewModel?.Gender == 1)">Male</option>
                                <option value="2" selected="@(Model.PatientProfileViewModel?.Gender == 2)">Female
                                </option>
                                <option value="3" selected="@(Model.PatientProfileViewModel?.Gender == 3)">Other
                                </option>
                            </select>
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Date Of Birth</label>
                            <input type="text" class="form-control"asp-for="@Model.PatientProfileViewModel!.DateOfBirth"value="@Model.PatientProfileViewModel?.DateOfBirth">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Address</label>
                            <input type="text" class="form-control" asp-for="@Model.PatientProfileViewModel!.Address"value="@Model.PatientProfileViewModel?.Address">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Medical History</label>
                            <input type="text" class="form-control"asp-for="@Model.PatientProfileViewModel!.MedicalHistory"value="@Model.PatientProfileViewModel?.MedicalHistory">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">Allergies</label>
                            <input type="text" class="form-control" asp-for="@Model.PatientProfileViewModel!.Allergies"value="@Model.PatientProfileViewModel?.Allergies">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">BloodType</label>
                            <input type="text" class="form-control" asp-for="@Model.PatientProfileViewModel!.BloodType"value="@Model.PatientProfileViewModel?.BloodType">
                        </div>
                        <div class="col-md-12">
                            <label class="labels">EmergencyContact</label>
                            <input type="text" class="form-control"asp-for="@Model.PatientProfileViewModel!.EmergencyContact"value="@Model.PatientProfileViewModel?.EmergencyContact">
                        </div>
                    }
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(successCallback, errorCallback);
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    }

    function successCallback(position) {
        let latitude = position.coords.latitude;
        let longitude = position.coords.longitude;
        console.log("Latitude:", latitude, "Longitude:", longitude);

        // 
        fetch('/User/Profile', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({latitude, longitude})
        })
            .then(response => response.json())
            .then(data => {
                console.log("Address:", data.address);
                document.getElementById("userAddress").innerText = "Your Address: " + data.address;
            })
            .catch(error => console.error("Error fetching address:", error));
    }

    function errorCallback(error) {
        console.error("Geolocation error:", error);
        alert("Unable to retrieve your location.");
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>